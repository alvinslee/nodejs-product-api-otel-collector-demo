services:
  app:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=product_inventory
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - API_TOKEN=${API_TOKEN}
    depends_on:
      - postgres
      - redis
      - otel-collector

  postgres:
    image: postgres:15-alpine
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=product_inventory
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./01_schema.sql:/docker-entrypoint-initdb.d/01_schema.sql
      - ./02_seed.sql:/docker-entrypoint-initdb.d/02_seed.sql

  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    environment:
      API_TOKEN: ${API_TOKEN}
    volumes:
      - type: bind
        source: ./otel-collector-config.yaml
        target: /etc/otel-collector-config.yaml
        read_only: true
    ports:
      - "14317:4317"
      - "14318:4318"
      - "13133:13133"

volumes:
  postgres_data:
  redis_data: 